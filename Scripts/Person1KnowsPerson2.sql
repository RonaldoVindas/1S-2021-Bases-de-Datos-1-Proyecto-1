/*Autor: Renzo Barra, 5/25/2021*/
CREATE TABLE PE.PERSON1KNOWSPERSON2 (
	PERSON1_ID INT NOT NULL COMMENT 'Person 1 identification code',
	PERSON2_ID INT NOT NULL COMMENT 'Person 2 identification code.',
	RELATIONTYPE_ID INT COMMENT 'Relation Type identification code.',
	CREATION_DATE DATETIME,
	CREATION_USER VARCHAR(50),
	DATE_LAST_MODIFICATION DATETIME,
	USER_LAST_MODIFICATION VARCHAR(50)
    );

ALTER TABLE PE.PERSON1KNOWSPERSON2 COMMENT 'Repository to storage information about relationships between people in the database.';

ALTER TABLE PE.PERSON1KNOWSPERSON2
	ADD PRIMARY KEY (PERSON1_ID, PERSON2_ID),
    ADD INDEX fk_person1knowsperson2_person1_id_idx (PERSON1_ID ASC) VISIBLE,
	ADD INDEX fk_person1knowsperson2_person2_id_idx (PERSON2_ID ASC) VISIBLE;

/*======================================FOREIGN KEYS======================================*/
ALTER TABLE PE.PERSON1KNOWSPERSON2 
	ADD CONSTRAINT fk_person1knowsperson2_person1_id
	FOREIGN KEY (PERSON1_ID)
	REFERENCES PE.PERSON (PERSON_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION,
	ADD CONSTRAINT fk_person1knowsperson2_person2_id
	FOREIGN KEY (PERSON2_ID)
	REFERENCES PE.PERSON (PERSON_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
  
ALTER TABLE PE.PERSON1KNOWSPERSON2
ADD INDEX fk_person1knowsperson2_relationtype_id_idx (RELATIONTYPE_ID ASC) VISIBLE;

ALTER TABLE PE.PERSON1KNOWSPERSON2
	ADD CONSTRAINT fk_person1knowsperson2_relationtype_id
	FOREIGN KEY (RELATIONTYPE_ID)
	REFERENCES PE.RELATIONTYPE (RELATIONTYPE_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;

/*======================================TRIGGERS======================================*/
/*INSERT TRIGGER*/
DROP TRIGGER IF EXISTS PE.PERSON1KNOWSPERSON2_BEFORE_INSERT;
DELIMITER $$
USE PE$$
CREATE DEFINER = CURRENT_USER TRIGGER PE.PERSON1KNOWSPERSON2_BEFORE_INSERT BEFORE INSERT ON PERSON1KNOWSPERSON2 FOR EACH ROW
	BEGIN
		SET NEW.CREATION_DATE = SYSDATE();
		SET NEW.CREATION_USER = USER();
		INSERT INTO systemLog(DESCRIPTION, OBJECT, TYPE_CHANGE)
		VALUES('AN PERSON1KNOWpERSON2 IS INSERTED', 'PERSON KNOWS A PERSON', 'INSERT');
END$$
DELIMITER;

/*UPDATE TRIGGER*/
DROP TRIGGER IF EXISTS PE.PERSON1KNOWSPERSON2_BEFORE_UPDATE;
DELIMITER $$
USE PE$$
CREATE DEFINER = CURRENT_USER TRIGGER PE.PERSON1KNOWSPERSON2_BEFORE_UPDATE BEFORE UPDATE ON PERSON1KNOWSPERSON2 FOR EACH ROW
	BEGIN
		SET NEW.DATE_LAST_MODIFICATION= SYSDATE();
		SET NEW.USER_LAST_MODIFICATION= USER();
		INSERT INTO systemLog(DESCRIPTION, OBJECT, TYPE_CHANGE)
		VALUES('AN PERSON1KNOWpERSON2 IS UPDATED', 'PERSON KNOWS A PERSON', 'UPDATE');
END$$
DELIMITER;

/*DELETE TRIGGER*/
DROP TRIGGER IF EXISTS PE.PERSON1KNOWSPERSON2_BEFORE_DELETE;
DELIMITER $$
USE PE$$
CREATE DEFINER = CURRENT_USER TRIGGER PE.PERSON1KNOWSPERSON2_BEFORE_DELETE BEFORE DELETE ON PERSON1KNOWSPERSON2 FOR EACH ROW
	BEGIN
		INSERT INTO systemLog(DESCRIPTION, OBJECT, TYPE_CHANGE)
		VALUES('AN PERSON1KNOWPERSON2 IS DELETED', 'PERSON KNOWS A PERSON', 'DELETE');
END$$
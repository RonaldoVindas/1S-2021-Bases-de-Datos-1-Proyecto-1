/*Autor: Renzo Barra, 5/25/2021*/

/*======================================TABLE======================================*/

CREATE TABLE PE.PERSONLENDITEM (
	PERSON1_ID INT NOT NULL COMMENT 'Person1 identification code.',
	PERSON2_ID INT NOT NULL COMMENT 'Person2 identification code.',
	ITEM_ID INT NOT NULL COMMENT 'Item identification code.',
	LEND_DATE DATETIME COMMENT 'Item Lend Date.',
	RETURN_DATE DATETIME COMMENT 'Item Return Date.',
	AMOUNT_DAYS INT COMMENT 'Total amount of days.',
	TOLERANCE_DAYS_YELLOW INT COMMENT 'Item Return Tolerance Days Yellow.',
	TOLERANCE_DAYS_RED INT COMMENT 'Item Return Tolerance Days Red.',
	CREATION_DATE DATETIME, 
	CREATION_USER VARCHAR(50), 
	DATE_LAST_MODIFICATION DATETIME, 
	USER_LAST_MODIFICATION VARCHAR(50)
    );

/*======================================COMMENTS======================================*/

ALTER TABLE PE.PERSONLENDITEM  COMMENT 'Repository to storage information about the items a person lends.';

/*======================================PRIMARY KEY======================================*/

ALTER TABLE PE.PERSONLENDITEM
	ADD PRIMARY KEY (PERSON1_ID, PERSON2_ID, ITEM_ID),
    ADD INDEX fk_personlenditem_person1_id_idx (PERSON1_ID ASC) VISIBLE,
	ADD INDEX fk_personlenditem_person2_id_idx (PERSON2_ID ASC) VISIBLE,
	ADD INDEX fk_personlenditem_item_id_idx (ITEM_ID ASC) VISIBLE;

/*======================================FOREIGN KEYS======================================*/

ALTER TABLE PE.PERSONLENDITEM
	ADD CONSTRAINT fk_personlenditem_person1_id
	FOREIGN KEY (PERSON1_ID)
	REFERENCES PE.PERSON (PERSON_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION,
    
	ADD CONSTRAINT fk_personlenditem_person2_id
	FOREIGN KEY (PERSON2_ID)
	REFERENCES PE.PERSON (PERSON_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION,
    
	ADD CONSTRAINT fk_personlenditem_item_id
	FOREIGN KEY (ITEM_ID)
	REFERENCES PE.ITEM (ITEM_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;

/*======================================TRIGGERS======================================*/
/*INSERT TRIGGER*/
DROP TRIGGER IF EXISTS PE.PERSONLENDITEM_BEFORE_INSERT;
DELIMITER $$
USE PE$$
CREATE DEFINER = CURRENT_USER TRIGGER PE.PERSONLENDITEM_BEFORE_INSERT BEFORE INSERT ON PERSONLENDITEM FOR EACH ROW
BEGIN
	SET NEW.CREATION_DATE = SYSDATE();
    SET NEW.CREATION_USER = USER();
    INSERT INTO systemLog(DESCRIPTION, OBJECT, TYPE_CHANGE)
    VALUES( 'A PERSON LEND ITEM IS INSERTED', 'PERSON LEND ITEM', 'INSERT');
END$$
DELIMITER;

/*UPDATE TRIGGER*/
DROP TRIGGER IF EXISTS PE.PERSONLENDITEM_BEFORE_UPDATE;
DELIMITER $$
USE PE$$
CREATE DEFINER = CURRENT_USER TRIGGER PE.PERSONLENDITEM_BEFORE_UPDATE BEFORE UPDATE ON PERSONLENDITEM FOR EACH ROW
	BEGIN
		SET NEW.DATE_LAST_MODIFICATION = SYSDATE();
		SET NEW.USER_LAST_MODIFICATION = USER();
		INSERT INTO systemLog(DESCRIPTION, OBJECT, TYPE_CHANGE)
		VALUES('A PERSON LEND ITEM IS UPDATED', 'PERSON LEND ITEM', 'UPDATE');
END$$
DELIMITER;

/*DELETE TRIGGER*/
DROP TRIGGER IF EXISTS PE.PERSONLENDITEM_BEFORE_DELETE;
DELIMITER $$
USE PE$$
CREATE DEFINER = CURRENT_USER TRIGGER PE.PERSONLENDITEM_BEFORE_DELETE BEFORE DELETE ON PERSONLENDITEM FOR EACH ROW
	BEGIN
		INSERT INTO systemLog(DESCRIPTION, OBJECT, TYPE_CHANGE)
		VALUES('AN PERSON LEND ITEM IS DELETED', 'PERSON LEND ITEM', 'DELETE');
END$$
/*Autor: Renzo Barra, 5/25/2021*/
CREATE TABLE PE.REVIEW (
	REVIEW_ID INT COMMENT 'RelationType identification code.',
	STARS INT COMMENT 'Review stars.',
	CREATION_DATE DATETIME,
	CREATION_USER VARCHAR(50),
	DATE_LAST_MODIFICATION DATETIME,
	USER_LAST_MODIFICATION VARCHAR(50)
    );

ALTER TABLE PE.REVIEW  COMMENT 'Repository to storage information about review.';

ALTER TABLE PE.REVIEW
AUTO_INCREMENT = 0,
CHANGE COLUMN REVIEW_ID REVIEW_ID INT NOT NULL AUTO_INCREMENT COMMENT 'RelationType identification code.',
ADD PRIMARY KEY (REVIEW_ID);

/*======================================TRIGGERS======================================*/
/*INSERT TRIGGER*/
DROP TRIGGER IF EXISTS PE.REVIEW_BEFORE_INSERT;
DELIMITER $$
USE PE$$
CREATE DEFINER = CURRENT_USER TRIGGER PE.REVIEW_BEFORE_INSERT BEFORE INSERT ON REVIEW FOR EACH ROW
	BEGIN
		Set new.creation_date = SYSDATE();
		Set new.creation_user = USER();
		INSERT INTO systemLog(description, object, type_change)
		VALUES('A REVIEW IS INSERTED', 'REVIEW', 'INSERT');
END$$
DELIMITER;

/*UPDATE TRIGGER*/
DROP TRIGGER IF EXISTS PE.REVIEW_BEFORE_UPDATE;
DELIMITER $$
USE PE$$
CREATE DEFINER = CURRENT_USER TRIGGER PE.REVIEW_BEFORE_UPDATE BEFORE UPDATE ON REVIEW FOR EACH ROW
	BEGIN
		Set new.date_last_modification= SYSDATE();
		Set new.user_last_modification= USER();
		INSERT INTO systemLog(description, object, type_change)
		VALUES('A REVIEW IS UPDATED', 'REVIEW', 'UPDATE');
END$$
DELIMITER ;

/*DELETE TRIGGER*/
DROP TRIGGER IF EXISTS PE.review_BEFORE_DELETE;
DELIMITER $$
USE PE$$
CREATE DEFINER = CURRENT_USER TRIGGER PE.REVIEW_BEFORE_DELETE BEFORE DELETE ON REVIEW FOR EACH ROW
	BEGIN
		INSERT INTO systemLog(description, object, type_change)
		VALUES('A REVIEW IS DELETED', 'REVIEW', 'DELETE');
END$$
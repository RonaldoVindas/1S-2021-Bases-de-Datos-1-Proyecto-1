/*Autor: Renzo Barra,5/25/2021*/

/*======================================TABLE======================================*/

CREATE TABLE PE.ITEMHASREVIEW (
	ITEM_ID INT NOT NULL COMMENT 'Item identification code.', 
	REVIEW_ID INT NOT NULL COMMENT 'Review identification code.', 
	CREATION_DATE DATETIME, 
	CREATION_USER VARCHAR(50), 
	DATE_LAST_MODIFICATION DATETIME, 
	USER_LAST_MODIFICATION VARCHAR(50)
    );

/*======================================COMMENTS======================================*/

ALTER TABLE PE.ITEMHASREVIEW  COMMENT 'Repository to storage information about the review an Item has.';

/*======================================PRIMARY KEY======================================*/

ALTER TABLE PE.ITEMHASREVIEW
	ADD PRIMARY KEY (ITEM_ID, REVIEW_ID);

/*======================================FOREIGN KEYS======================================*/
ALTER TABLE PE.ITEMHASREVIEW
	ADD INDEX fk_itemhasreview_review_id_idx (REVIEW_ID ASC) VISIBLE;

ALTER TABLE PE.ITEMHASREVIEW 
	ADD CONSTRAINT fk_itemhasreview_item_id
		FOREIGN KEY (ITEM_ID)
		REFERENCES PE.ITEM (ITEM_ID)
		ON DELETE NO ACTION
		ON UPDATE NO ACTION,
	ADD CONSTRAINT fk_itemhasreview_review_id
		FOREIGN KEY (REVIEW_ID)
		REFERENCES PE.REVIEW (REVIEW_ID)
		ON DELETE NO ACTION
		ON UPDATE NO ACTION;
    
/*======================================TRIGGERS======================================*/
/*INSERT TRIGGER*/
DROP TRIGGER IF EXISTS PE.ITEMHASREVIEW_BEFORE_INSERT;
DELIMITER $$
USE PE$$
CREATE DEFINER = CURRENT_USER TRIGGER PE.ITEMHASREVIEW_BEFORE_INSERT BEFORE INSERT ON ITEMHASREVIEW FOR EACH ROW
BEGIN
	SET NEW.CREATION_DATE = SYSDATE();
    SET NEW.CREATION_USER = USER();
    INSERT INTO systemLog(DESCRIPTION, OBJECT, TYPE_CHANGE)
    VALUES('AN ITEM HAS REVIEW IS INSERTED', 'ITEM HAS REVIEW', 'INSERT');
END$$
DELIMITER ;

/*UPDATE TRIGGER*/
DROP TRIGGER IF EXISTS PE.ITEMHASREVIEW_BEFORE_UPDATE;
DELIMITER $$
USE PE$$
CREATE DEFINER = CURRENT_USER TRIGGER PE.ITEMHASREVIEW_BEFORE_UPDATE BEFORE UPDATE ON ITEMHASREVIEW FOR EACH ROW
	BEGIN
		SET NEW.DATE_LAST_MODIFICATION= SYSDATE();
		SET NEW.USER_LAST_MODIFICATION= USER();
		INSERT INTO systemLog(DESCRIPTION, OBJECT, TYPE_CHANGE)
		VALUES('AN ITEM HAS REVIEW IS UPDATED', 'ITEM HAS REVIEW', 'UPDATE');
END$$
DELIMITER ;

/*DELETE TRIGGER*/
DROP TRIGGER IF EXISTS PE.ITEMHASREVIEW_BEFORE_DELETE;
DELIMITER $$
USE PE$$
CREATE DEFINER = CURRENT_USER TRIGGER PE.ITEMHASREVIEW_BEFORE_DELETE BEFORE DELETE ON ITEMHASREVIEW FOR EACH ROW
	BEGIN
		INSERT INTO systemLog(DESCRIPTION, OBJECT, TYPE_CHANGE)
		VALUES('AN ITEM HAS REVIEW IS DELETED', 'ITEM HAS REVIEW', 'DELETE');
END$$
/*==================================================CREACIÓN DE TABLAS======================================================*/
create table Genre(
  genre_id  Number(11),
  genre_name varchar2(20),
  description varchar2(140)
);
/
/*==================================================COMENTARIOS EN TABLAS Y COLUMNAS======================================================*/

COMMENT ON TABLE Genre
IS 'Repository to storage information about genres.';

/

COMMENT ON Column genre.genre_id
IS 'genre identification code.';

/

COMMENT ON Column genre.genre_name
IS 'genre name.';

/

COMMENT ON Column genre.description
IS 'genre description.';

/*==================================================CREACIÓN DE LLAVES PRIMARIAS======================================================*/


alter table Genre
  add constraint pk_genre primary key (genre_id)
  using index
  tablespace pe_ind pctfree 20
  storage (initial 10k next 10k pctincrease 0);


/*==================================================CAMPOS DE AUDITORÍA PARA TABLAS======================================================*/


ALTER TABLE genre
ADD creation_date DATE
ADD creation_user VARCHAR(10)
ADD date_last_modification DATE
ADD user_last_modification VARCHAR(10);



/*==================================================CREACIÓN DE SECUENCIAS PARA TABLAS======================================================*/

CREATE SEQUENCE s_genre
START WITH 0
INCREMENT BY 1
MINVALUE 0
MAXVALUE 99999999999
NOCACHE
NOCYCLE;

/*==================================================CREACIÓN DE TRIGGERS PARA TABLAS======================================================*/

CREATE OR REPLACE TRIGGER pe.beforeInsertgenre
BEFORE INSERT
ON pe.genre
FOR EACH ROW
BEGIN
    :new.genre_id := s_genre.nextval;
    :new.creation_date := SYSDATE;
    :new.creation_user := USER;
END beforeInsertgenre; 

/

CREATE OR REPLACE TRIGGER pe.beforeUPDATEgenre
BEFORE UPDATE
ON pe.genre
FOR EACH ROW
BEGIN
    :new.date_last_modification:= SYSDATE;
    :new.user_last_modification:= USER;
END beforeUPDATEgenre; 

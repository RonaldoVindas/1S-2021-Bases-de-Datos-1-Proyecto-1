/*Autor: Renzo Barra, 5/25/2021*/
CREATE TABLE PE.ITEM (
	ITEM_ID INT COMMENT 'Item identification code.',
    TITLE VARCHAR(50) NOT NULL,
    EDITION VARCHAR(50) NOT NULL COMMENT 'Item edition.',
    COVER_IMAGE LONGBLOB COMMENT 'Item cover image.',
    BARCODE VARCHAR(12) NOT NULL COMMENT 'Item barcode.',
    ITEMTYPE_ID INT COMMENT 'Item type identification.',
    STATUS_ID INT COMMENT 'Item status identification.',
    PUBLISHER_ID INT COMMENT 'Item publisher identification.',
    CREATION_DATE DATETIME,
    CREATION_USER VARCHAR(50),
    DATE_LAST_MODIFICATION DATETIME,
    USER_LAST_MODIFICATION VARCHAR(50)
    );

ALTER TABLE PE.ITEM  COMMENT 'Repository to storage information about the items in the database.';

ALTER TABLE PE.ITEM
AUTO_INCREMENT = 0,
CHANGE COLUMN ITEM_ID ITEM_ID INT NOT NULL AUTO_INCREMENT COMMENT 'Item identification code.',
ADD PRIMARY KEY (ITEM_ID);

/*======================================FOREIGN KEYS======================================*/
ALTER TABLE PE.ITEM 
ADD INDEX fk_item_itemtype_id_idx (ITEMTYPE_ID ASC) VISIBLE,
ADD INDEX fk_item_publisher_id_idx (PUBLISHER_ID ASC) VISIBLE,
ADD INDEX fk_item_status_id_idx (STATUS_ID ASC) VISIBLE;

ALTER TABLE PE.ITEM
	ADD CONSTRAINT fk_item_itemtype_id
	FOREIGN KEY (ITEMTYPE_ID)
	REFERENCES PE.ITEMTYPE (ITEMTYPE_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION,
ADD CONSTRAINT fk_item_publisher_id
	FOREIGN KEY (PUBLISHER_ID)
	REFERENCES PE.PUBLISHER (PUBLISHER_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION,
ADD CONSTRAINT fk_item_status_id
	FOREIGN KEY (STATUS_ID)
	REFERENCES PE.STATUS (STATUS_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;

/*======================================TRIGGERS======================================*/
/*INSERT TRIGGER*/
DROP TRIGGER IF EXISTS PE.ITEM_BEFORE_INSERT;
DELIMITER $$
USE PE$$
CREATE DEFINER = CURRENT_USER TRIGGER PE.ITEM_BEFORE_INSERT BEFORE INSERT ON ITEM FOR EACH ROW
	BEGIN
		SET NEW.CREATION_DATE = SYSDATE();
		SET NEW.CREATION_USER = USER();
		INSERT INTO systemLog(DESCRIPTION, OBJECT, TYPE_CHANGE)
		VALUES('AN ITEM IS INSERTED', 'ITEM', 'INSERT');
END$$
DELIMITER;

/*UPDATE TRIGGER*/
DROP TRIGGER IF EXISTS PE.ITEM_BEFORE_UPDATE;
DELIMITER $$
USE PE$$
CREATE DEFINER = CURRENT_USER TRIGGER PE.ITEM_BEFORE_UPDATE BEFORE UPDATE ON ITEM FOR EACH ROW
	BEGIN
		SET NEW.DATE_LAST_MODIFICATION = SYSDATE();
		SET NEW.USER_LAST_MODIFICATION = USER();
		INSERT INTO systemLog(DESCRIPTION, OBJECT, TYPE_CHANGE)
		VALUES('AN ITEM IS UPDATED', 'ITEM', 'UPDATE');
END$$
DELIMITER;

/*DELETE TRIGGER*/
DROP TRIGGER IF EXISTS PE.ITEM_BEFORE_DELETE;
DELIMITER $$
USE PE$$
CREATE DEFINER = CURRENT_USER TRIGGER PE.ITEM_BEFORE_DELETE BEFORE DELETE ON ITEM FOR EACH ROW
	BEGIN
		INSERT INTO systemLog(DESCRIPTION, OBJECT, TYPE_CHANGE)
		VALUES('AN ITEM IS DELETED', 'ITEM', 'DELETE');
END$$
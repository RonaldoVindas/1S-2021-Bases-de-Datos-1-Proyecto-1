/*Autor: Renzo Barra, 5/25/2021*/
CREATE TABLE PE.GENRE (
	GENRE_ID BIGINT COMMENT 'Genre identification code.',
    GENRE_NAME VARCHAR(50) NOT NULL COMMENT 'Genre name.',
    DESCRIPTION VARCHAR(150) COMMENT 'Genre description.',
    CREATION_DATE DATETIME,
    CREATION_USER VARCHAR(50),
    DATE_LAST_MODIFICATION DATETIME,
    USER_LAST_MODIFICATION VARCHAR(50)
    );

ALTER TABLE PE.GENRE  COMMENT 'Repository to storage information about the Genres an Item has.';

ALTER TABLE PE.GENRE
AUTO_INCREMENT = 0,
CHANGE COLUMN GENRE_ID GENRE_ID INT NOT NULL AUTO_INCREMENT COMMENT 'Genre identification code.',
ADD PRIMARY KEY (GENRE_ID);

/*======================================TRIGGERS======================================*/
/*INSERT TRIGGER*/
DROP TRIGGER IF EXISTS PE.GENRE_BEFORE_INSERT;
DELIMITER $$
USE PE$$
CREATE DEFINER = CURRENT_USER TRIGGER PE.GENRE_BEFORE_INSERT BEFORE INSERT ON GENRE FOR EACH ROW
	BEGIN
		Set new.creation_date = SYSDATE();
		Set new.creation_user = USER();
		INSERT INTO systemLog(description, object, type_change)
		VALUES('A GENRE IS INSERTED', 'GENRE', 'INSERT');
END$$
DELIMITER;

/*UPDATE TRIGGER*/
DROP TRIGGER IF EXISTS PE.GENRE_BEFORE_UPDATE;
DELIMITER $$
USE PE$$
CREATE DEFINER = CURRENT_USER TRIGGER PE.GENRE_BEFORE_UPDATE BEFORE UPDATE ON genre FOR EACH ROW
	BEGIN
		Set new.date_last_modification = SYSDATE();
		Set new.user_last_modification = USER();
		INSERT INTO systemLog(description, object, type_change)
		VALUES('A GENRE IS UPDATED', 'GENRE', 'UPDATE');
END$$
DELIMITER;

/*DELETE TRIGGER*/
DELIMITER $$
USE PE$$
CREATE DEFINER = CURRENT_USER TRIGGER PE.GENRE_BEFORE_DELETE BEFORE DELETE ON genre FOR EACH ROW
	BEGIN
		INSERT INTO systemLog(description, object, type_change)
		VALUES('A GENRE IS DELETED ', 'GENRE', 'DELETE');
END$$